// <auto-generated />
using DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DB.Migrations
{
    [DbContext(typeof(CodeChallengeContext))]
    [Migration("20230323002520_AddFailedInstructionColumn")]
    partial class AddFailedInstructionColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DB.LostRobot", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("failedInstruction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("orientation")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("surfaceId")
                        .HasColumnType("int");

                    b.Property<int>("xCoordinate")
                        .HasColumnType("int");

                    b.Property<int>("yCoordinate")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("surfaceId");

                    b.ToTable("LostRobots");
                });

            modelBuilder.Entity("DB.Surface", b =>
                {
                    b.Property<int>("surfaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("surfaceId"));

                    b.Property<int>("xSize")
                        .HasColumnType("int");

                    b.Property<int>("ySize")
                        .HasColumnType("int");

                    b.HasKey("surfaceId");

                    b.HasIndex("xSize", "ySize")
                        .IsUnique();

                    b.ToTable("Surfaces");
                });

            modelBuilder.Entity("DB.LostRobot", b =>
                {
                    b.HasOne("DB.Surface", "surface")
                        .WithMany("LostRobots")
                        .HasForeignKey("surfaceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("surface");
                });

            modelBuilder.Entity("DB.Surface", b =>
                {
                    b.Navigation("LostRobots");
                });
#pragma warning restore 612, 618
        }
    }
}
